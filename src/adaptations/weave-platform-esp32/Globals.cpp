#include <ConfigurationManager.h>
#include <WeavePlatform-ESP32-Internal.h>

namespace WeavePlatform {

nl::Weave::System::Layer SystemLayer;
nl::Inet::InetLayer InetLayer;
nl::Weave::WeaveFabricState FabricState;
nl::Weave::WeaveMessageLayer MessageLayer;
nl::Weave::WeaveExchangeManager ExchangeMgr;
nl::Weave::WeaveSecurityManager SecurityMgr;
ConfigurationManager ConfigMgr;

namespace Internal {

const char * const TAG = "weave-platform";

const uint64_t gTestDeviceId = 0x18B4300000000001ULL;

const char * gTestPairingCode = "TEST";

const uint8_t gTestDeviceCert[] =
{
    /*
    -----BEGIN CERTIFICATE-----
    MIIBhzCCAT6gAwIBAgIIEEjK8u1PmzAwCQYHKoZIzj0EATAiMSAwHgYKKwYBBAGC
    wysBAwwQMThCNDMwRUVFRTAwMDAwMjAeFw0xMzEwMjIwMDQ3MDBaFw0yMzEwMjAw
    MDQ3MDBaMCIxIDAeBgorBgEEAYLDKwEBDBAxOEI0MzAwMDAwMDAwMDAxME4wEAYH
    KoZIzj0CAQYFK4EEACEDOgAE72edUwyZ/51yQrH5tmAgjiWfNXLwo+eD5lYUk/lo
    RWWLJDFeh4xkNSWHGQOZzUWhJPp2CxKeOX6jajBoMAwGA1UdEwEB/wQCMAAwDgYD
    VR0PAQH/BAQDAgWgMCAGA1UdJQEB/wQWMBQGCCsGAQUFBwMCBggrBgEFBQcDATAR
    BgNVHQ4ECgQITv9HUeTGY5swEwYDVR0jBAwwCoAIRONAOKnUtacwCQYHKoZIzj0E
    AQM4ADA1Ahhdt1KwlRMRcfFbZAOAjBi+oSDxhrpFbBQCGQDFDc8mAoARjFE6vZWV
    dpR3yUb/7cCgPb0=
    -----END CERTIFICATE-----
    */

    0xd5, 0x00, 0x00, 0x04, 0x00, 0x01, 0x00, 0x30, 0x01, 0x08, 0x10, 0x48, 0xca, 0xf2, 0xed, 0x4f,
    0x9b, 0x30, 0x24, 0x02, 0x04, 0x57, 0x03, 0x00, 0x27, 0x13, 0x02, 0x00, 0x00, 0xee, 0xee, 0x30,
    0xb4, 0x18, 0x18, 0x26, 0x04, 0x04, 0x23, 0x73, 0x1a, 0x26, 0x05, 0x04, 0xcc, 0x98, 0x2d, 0x57,
    0x06, 0x00, 0x27, 0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x30, 0xb4, 0x18, 0x18, 0x24, 0x07, 0x02,
    0x24, 0x08, 0x25, 0x30, 0x0a, 0x39, 0x04, 0xef, 0x67, 0x9d, 0x53, 0x0c, 0x99, 0xff, 0x9d, 0x72,
    0x42, 0xb1, 0xf9, 0xb6, 0x60, 0x20, 0x8e, 0x25, 0x9f, 0x35, 0x72, 0xf0, 0xa3, 0xe7, 0x83, 0xe6,
    0x56, 0x14, 0x93, 0xf9, 0x68, 0x45, 0x65, 0x8b, 0x24, 0x31, 0x5e, 0x87, 0x8c, 0x64, 0x35, 0x25,
    0x87, 0x19, 0x03, 0x99, 0xcd, 0x45, 0xa1, 0x24, 0xfa, 0x76, 0x0b, 0x12, 0x9e, 0x39, 0x7e, 0x35,
    0x83, 0x29, 0x01, 0x18, 0x35, 0x82, 0x29, 0x01, 0x24, 0x02, 0x05, 0x18, 0x35, 0x84, 0x29, 0x01,
    0x36, 0x02, 0x04, 0x02, 0x04, 0x01, 0x18, 0x18, 0x35, 0x81, 0x30, 0x02, 0x08, 0x4e, 0xff, 0x47,
    0x51, 0xe4, 0xc6, 0x63, 0x9b, 0x18, 0x35, 0x80, 0x30, 0x02, 0x08, 0x44, 0xe3, 0x40, 0x38, 0xa9,
    0xd4, 0xb5, 0xa7, 0x18, 0x35, 0x0c, 0x30, 0x01, 0x18, 0x5d, 0xb7, 0x52, 0xb0, 0x95, 0x13, 0x11,
    0x71, 0xf1, 0x5b, 0x64, 0x03, 0x80, 0x8c, 0x18, 0xbe, 0xa1, 0x20, 0xf1, 0x86, 0xba, 0x45, 0x6c,
    0x14, 0x30, 0x02, 0x19, 0x00, 0xc5, 0x0d, 0xcf, 0x26, 0x02, 0x80, 0x11, 0x8c, 0x51, 0x3a, 0xbd,
    0x95, 0x95, 0x76, 0x94, 0x77, 0xc9, 0x46, 0xff, 0xed, 0xc0, 0xa0, 0x3d, 0xbd, 0x18, 0x18
};

const uint16_t gTestDeviceCertLength = sizeof(gTestDeviceCert);

const uint8_t gTestDevicePrivateKey[] =
{

    /*
    -----BEGIN EC PRIVATE KEY-----
    MGgCAQEEHKmH22bJe2mLomgimLLt70dguW98M6EsKajVuO6gBwYFK4EEACGhPAM6
    AATvZ51TDJn/nXJCsfm2YCCOJZ81cvCj54PmVhST+WhFZYskMV6HjGQ1JYcZA5nN
    RaEk+nYLEp45fg==
    -----END EC PRIVATE KEY-----
    */

    0xd5, 0x00, 0x00, 0x04, 0x00, 0x02, 0x00, 0x24, 0x01, 0x25, 0x30, 0x02, 0x1c, 0xa9, 0x87, 0xdb,
    0x66, 0xc9, 0x7b, 0x69, 0x8b, 0xa2, 0x68, 0x22, 0x98, 0xb2, 0xed, 0xef, 0x47, 0x60, 0xb9, 0x6f,
    0x7c, 0x33, 0xa1, 0x2c, 0x29, 0xa8, 0xd5, 0xb8, 0xee, 0x30, 0x03, 0x39, 0x04, 0xef, 0x67, 0x9d,
    0x53, 0x0c, 0x99, 0xff, 0x9d, 0x72, 0x42, 0xb1, 0xf9, 0xb6, 0x60, 0x20, 0x8e, 0x25, 0x9f, 0x35,
    0x72, 0xf0, 0xa3, 0xe7, 0x83, 0xe6, 0x56, 0x14, 0x93, 0xf9, 0x68, 0x45, 0x65, 0x8b, 0x24, 0x31,
    0x5e, 0x87, 0x8c, 0x64, 0x35, 0x25, 0x87, 0x19, 0x03, 0x99, 0xcd, 0x45, 0xa1, 0x24, 0xfa, 0x76,
    0x0b, 0x12, 0x9e, 0x39, 0x7e, 0x18
};

const uint16_t gTestDevicePrivateKeyLength = sizeof(gTestDevicePrivateKey);


} // namespace Internal
} // namespace WeavePlatform
